---
# https://prometheus.io/docs/prometheus/latest/installation/
- name: Pre-install Prometheus
  become: true
  block:
    - name: Creating prometheus user group
      group: name="{{groupId}}"
      become: true

    - name: Creating prometheus user
      user:
        name: "{{userId}}"
        group: "{{groupId}}"
        system: yes
        shell: "/sbin/nologin"
        comment: "{{userId}} nologin User"
        createhome: "no"
        state: present

    - name: Create data directory
      file:
        path: "/data/prometheus/"
        state: directory
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755

    - name: Create configs directory
      file:
        path: "/etc/prometheus/"
        state: directory
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755

- name: Install Prometheus
  block:
    - name: Download Prometheus binary
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"
        dest: /tmp/
        remote_src: yes

    - name: Install Prometheus - Copy Prometheus file to bin
      copy:
        src: "/tmp/prometheus-{{ version }}.linux-amd64/prometheus"
        dest: "/usr/local/bin/prometheus"
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755
        remote_src: yes

    - name: Delete Prometheus tmp folder
      file:
        path: "/tmp/prometheus-{{ version }}.linux-amd64"
        state: absent
        force: yes

- name: Check Prometheus version
  block:
    - name: Get Prometheus version
      shell: "prometheus --version"
      register: _version_output

    - name: Print version
      debug:
        msg: "Prometheus version: {{ _version_output.stdout }}"

- name: Configure Prometheus
  block:
    - name: Copy Prometheus config file
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml

    - name: Specify path to config file
      shell: "prometheus --config.file=/etc/prometheus/prometheus.yml"
      async: 5 # let it run in background
      poll: 0 # don't wait for it to finish

- name: Configure Prometheus alert rules
  template:
    src: ../files/alert_rules.yml
    dest: /etc/prometheus/alert_rules.yml

- name: "Wait for service UP"
  uri:
    url: http://127.0.0.1:{{ port }}
    status_code: 200
  register: _prometheus_server_status
  until: _prometheus_server_status.status == 200
  retries: 120
  delay: 1
