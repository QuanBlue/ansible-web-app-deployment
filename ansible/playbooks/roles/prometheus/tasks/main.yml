---
# https://prometheus.io/docs/prometheus/latest/installation/
- name: pre-install prometheus
  become: true
  block:
    - name: creating prometheus user group
      group: name="{{groupId}}"
      become: true

    - name: creating prometheus user
      user:
        name: "{{userId}}"
        group: "{{groupId}}"
        system: yes
        shell: "/sbin/nologin"
        comment: "{{userId}} nologin User"
        createhome: "no"
        state: present

    - name: create data directory
      file:
        path: "/data/prometheus/"
        state: directory
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755

    - name: create configs directory
      file:
        path: "/etc/prometheus/"
        state: directory
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755

- name: install prometheus
  block:
    - name: download prometheus binary
      register: task_result
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ version }}/prometheus-{{ version }}.linux-amd64.tar.gz"
        dest: /tmp/
        remote_src: yes
      until: task_result is succeeded
      retries: 5
      delay: 10

    - name: install prometheus - copy prometheus executable to bin
      copy:
        src: "/tmp/prometheus-{{ version }}.linux-amd64/prometheus"
        dest: "/usr/local/bin/prometheus"
        owner: "{{userId}}"
        group: "{{groupId}}"
        mode: 0755
        remote_src: yes

    - name: delete prometheus tmp folder
      file:
        path: "/tmp/prometheus-{{ version }}.linux-amd64"
        state: absent
        force: yes

- name: check prometheus version
  block:
    - name: get prometheus version
      shell: "prometheus --version"
      register: _version_output

    - name: print version
      debug:
        msg: "Prometheus version: {{ _version_output.stdout }}"

- name: configure prometheus
  block:
    - name: setup prometheus config
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml

    - name: configure prometheus alert rules
      template:
        src: ../files/alert_rules.yml
        dest: /etc/prometheus/alert_rules.yml

- name: start prometheus
  shell: prometheus --config.file=/etc/prometheus/prometheus.yml & # restart the process if/when it stops
  async: 5 # let it run in background
  poll: 0 # don't wait for it to finish

- name: pause for 5 second wait starting alertmanager
  pause:
    seconds: 5

- name: "check if prometheus is accessible"
  uri:
    url: http://127.0.0.1:{{ prometheus_port }}
    status_code: 200
  register: _prometheus_server_status
  until: _prometheus_server_status.status == 200
  retries: 60
  delay: 1
  ignore_errors: yes
